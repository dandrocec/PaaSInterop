
package hr.org.foi.aiplanning.services;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-2b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AiPlanningService", targetNamespace = "http://services.aiplanning.foi.org.hr/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AiPlanningService {


    /**
     * 
     * @param aiGoal
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getInteroperabilityProblems", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.GetInteroperabilityProblems")
    @ResponseWrapper(localName = "getInteroperabilityProblemsResponse", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.GetInteroperabilityProblemsResponse")
    @Action(input = "http://services.aiplanning.foi.org.hr/AiPlanningService/getInteroperabilityProblemsRequest", output = "http://services.aiplanning.foi.org.hr/AiPlanningService/getInteroperabilityProblemsResponse")
    public String getInteroperabilityProblems(
        @WebParam(name = "aiGoal", targetNamespace = "")
        String aiGoal);

    /**
     * 
     * @param aiGoal
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createProblemFile", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.CreateProblemFile")
    @ResponseWrapper(localName = "createProblemFileResponse", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.CreateProblemFileResponse")
    @Action(input = "http://services.aiplanning.foi.org.hr/AiPlanningService/createProblemFileRequest", output = "http://services.aiplanning.foi.org.hr/AiPlanningService/createProblemFileResponse")
    public String createProblemFile(
        @WebParam(name = "aiGoal", targetNamespace = "")
        String aiGoal);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "prepareAiPlan", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.PrepareAiPlan")
    @ResponseWrapper(localName = "prepareAiPlanResponse", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.PrepareAiPlanResponse")
    @Action(input = "http://services.aiplanning.foi.org.hr/AiPlanningService/prepareAiPlanRequest", output = "http://services.aiplanning.foi.org.hr/AiPlanningService/prepareAiPlanResponse")
    public String prepareAiPlan();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAiPlan", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.FindAiPlan")
    @ResponseWrapper(localName = "findAiPlanResponse", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.FindAiPlanResponse")
    @Action(input = "http://services.aiplanning.foi.org.hr/AiPlanningService/findAiPlanRequest", output = "http://services.aiplanning.foi.org.hr/AiPlanningService/findAiPlanResponse")
    public String findAiPlan();

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "doesPlanExist", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.DoesPlanExist")
    @ResponseWrapper(localName = "doesPlanExistResponse", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.DoesPlanExistResponse")
    @Action(input = "http://services.aiplanning.foi.org.hr/AiPlanningService/doesPlanExistRequest", output = "http://services.aiplanning.foi.org.hr/AiPlanningService/doesPlanExistResponse")
    public boolean doesPlanExist();

    /**
     * 
     * @param plan
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeServicesFromPlan", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.ExecuteServicesFromPlan")
    @ResponseWrapper(localName = "executeServicesFromPlanResponse", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.ExecuteServicesFromPlanResponse")
    @Action(input = "http://services.aiplanning.foi.org.hr/AiPlanningService/executeServicesFromPlanRequest", output = "http://services.aiplanning.foi.org.hr/AiPlanningService/executeServicesFromPlanResponse")
    public String executeServicesFromPlan(
        @WebParam(name = "plan", targetNamespace = "")
        String plan);

    /**
     * 
     * @param chosenDataContainer
     * @param directory
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeUnrelatedCsvFiles", targetNamespace = "http://services.aiplanning.foi.org.hr/", className = "hr.org.foi.aiplanning.services.RemoveUnrelatedCsvFiles")
    @Action(input = "http://services.aiplanning.foi.org.hr/AiPlanningService/removeUnrelatedCsvFiles")
    public void removeUnrelatedCsvFiles(
        @WebParam(name = "directory", targetNamespace = "")
        String directory,
        @WebParam(name = "chosenDataContainer", targetNamespace = "")
        String chosenDataContainer);

}
